#!/usr/bin/env php
<?php
/**
 * This file is part of O3-Shop Testing library.
 *
 * O3-Shop is free software: you can redistribute it and/or modify  
 * it under the terms of the GNU General Public License as published by  
 * the Free Software Foundation, version 3.
 *
 * O3-Shop is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with O3-Shop.  If not, see <http://www.gnu.org/licenses/>
 *
 * @copyright  Copyright (c) 2022 OXID eSales AG (https://www.oxid-esales.com)
 * @copyright  Copyright (c) 2022 O3-Shop (https://www.o3-shop.com)
 * @license    https://www.gnu.org/licenses/gpl-3.0  GNU General Public License 3 (GPLv3)
 */

use OxidEsales\DeveloperTools\Framework\Module\ResetConfiguration\ConfigurationResettingServiceInterface;
use OxidEsales\EshopCommunity\Internal\Container\ContainerFactory;

require_once __DIR__ .'/../base.php';

// NOTE: reset-shop can reset a local shop as well as a remote one depending on
// test_config.yml settings. Presence of the correct UNC classes needs to be ensured
// in local as well as remote installation before any shop classes can be used.
\OxidEsales\TestingLibrary\TestConfig::prepareUnifiedNamespaceClasses();

$testConfig = new OxidEsales\TestingLibrary\TestConfig();

$serviceCaller = new OxidEsales\TestingLibrary\ServiceCaller($testConfig);
$serviceCaller->setParameter('addDemoData', 1);
$serviceCaller->setParameter('turnOnVarnish', $testConfig->shouldEnableVarnish());
$serviceCaller->setParameter('setupPath', $testConfig->getShopSetupPath());
$serviceCaller->callService('ShopInstaller');

$container = ContainerFactory::getInstance()->getContainer();
$container->get(ConfigurationResettingServiceInterface::class)->reset();
