#!/usr/bin/env php
<?php
/**
 * This file is part of O3-Shop Testing library.
 *
 * O3-Shop is free software: you can redistribute it and/or modify  
 * it under the terms of the GNU General Public License as published by  
 * the Free Software Foundation, version 3.
 *
 * O3-Shop is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with O3-Shop.  If not, see <http://www.gnu.org/licenses/>
 *
 * @copyright  Copyright (c) 2022 OXID eSales AG (https://www.oxid-esales.com)
 * @copyright  Copyright (c) 2022 O3-Shop (https://www.o3-shop.com)
 * @license    https://www.gnu.org/licenses/gpl-3.0  GNU General Public License 3 (GPLv3)
 */

 /**
 * @deprecated 7.3.0
 */

require_once __DIR__ .'/../base.php';

$testConfig = new OxidEsales\TestingLibrary\TestConfig();

$arguments = array();
array_shift($argv);
foreach ($argv as $argument) {
    $arguments[] = (strpos($argument, '-') === 0) ? $argument : escapeshellarg($argument);
}

$php = getenv('PHPBIN') ? getenv('PHPBIN') : 'php';

$phpUnit = $testConfig->getVendorDirectory() ."/bin/phpunit";
if (!file_exists($phpUnit)) {
    $phpUnit = "phpunit";
}
$phpUnit = "$php $phpUnit --bootstrap " .__DIR__ ."/../bootstrap.php";

$arguments = empty($arguments) ? array(escapeshellarg('AllTestsUnit')) : $arguments;

$returnCode = 0;
if (end($arguments) == escapeshellarg('AllTestsUnit')) {
    $testSuites = $testConfig->getTestSuites();
    foreach ($testSuites as $suite) {
        $suiteReturnCode = runSuite($suite, $phpUnit, $arguments);
        $returnCode = $returnCode == 0 ? $suiteReturnCode : $returnCode;
    }
} else {
    $suite = $testConfig->getCurrentTestSuite();
    $returnCode = runSuite($suite, $phpUnit, $arguments);
}

exit($returnCode);

/**
 * Runs test suite.
 *
 * @param string $suite     Suite path.
 * @param string $phpUnit   PHPUnit run command.
 * @param array  $arguments arguments to pass to PHPUnit.
 *
 * @return int Error code.
 */
function runSuite($suite, $phpUnit, $arguments)
{
    $configuration = '';
    if (file_exists($suite ."/phpunit.xml")) {
        $configuration = "-c ". escapeshellarg("$suite/phpunit.xml");
    }

    $fileCopier = new OxidEsales\TestingLibrary\FileCopier();
    $reportsDir = $suite .'/reports';
    $fileCopier->createEmptyDirectory($reportsDir);

    $arguments = implode(' ', $arguments);
    $return = 0;
    $suite = escapeshellarg($suite);
    if (strpos($arguments, "'AllTestsUnit'") !== false) {
        $arguments = str_replace('AllTestsUnit', __DIR__."/../AllTestsUnit.php", $arguments);
    }
    passthru("TEST_SUITE=$suite $phpUnit --coverage-php $reportsDir/coverage.cov --coverage-clover $reportsDir/clover.xml --coverage-html $reportsDir/html $configuration $arguments", $return);

    return $return;
}
